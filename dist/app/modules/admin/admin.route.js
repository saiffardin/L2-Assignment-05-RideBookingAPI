"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdminRoutes = void 0;
const express_1 = require("express");
const admin_controller_1 = require("./admin.controller");
const admin_validation_1 = require("./admin.validation");
const validateZodRequest_1 = require("../../middlewares/validateZodRequest");
const checkAuth_1 = require("../../middlewares/checkAuth");
const constants_1 = require("../../constants");
exports.AdminRoutes = (0, express_1.Router)();
exports.AdminRoutes.post("/login", (0, validateZodRequest_1.validateZodRequest)(admin_validation_1.loginAdminZodSchema), admin_controller_1.AdminControllers.loginAdmin);
exports.AdminRoutes.get("/drivers", (0, checkAuth_1.checkAuth)(constants_1.Role.ADMIN, constants_1.Role.SUPER_ADMIN), admin_controller_1.AdminControllers.getAllDrivers);
exports.AdminRoutes.get("/riders", (0, checkAuth_1.checkAuth)(constants_1.Role.ADMIN, constants_1.Role.SUPER_ADMIN), admin_controller_1.AdminControllers.getAllRiders);
exports.AdminRoutes.get("/trips", (0, checkAuth_1.checkAuth)(constants_1.Role.ADMIN, constants_1.Role.SUPER_ADMIN), admin_controller_1.AdminControllers.getAllTrips);
exports.AdminRoutes.patch("/drivers/:driverId/approve", (0, checkAuth_1.checkAuth)(constants_1.Role.ADMIN, constants_1.Role.SUPER_ADMIN), admin_controller_1.AdminControllers.approveDriver);
exports.AdminRoutes.patch("/drivers/:driverId/suspend", (0, checkAuth_1.checkAuth)(constants_1.Role.ADMIN, constants_1.Role.SUPER_ADMIN), admin_controller_1.AdminControllers.suspendDriver);
exports.AdminRoutes.patch("/users/:userId/block", (0, checkAuth_1.checkAuth)(constants_1.Role.ADMIN, constants_1.Role.SUPER_ADMIN), (0, validateZodRequest_1.validateZodRequest)(admin_validation_1.userRiderDriverZodSchema), admin_controller_1.AdminControllers.blockUser);
exports.AdminRoutes.patch("/users/:userId/unblock", (0, checkAuth_1.checkAuth)(constants_1.Role.ADMIN, constants_1.Role.SUPER_ADMIN), (0, validateZodRequest_1.validateZodRequest)(admin_validation_1.userRiderDriverZodSchema), admin_controller_1.AdminControllers.unblockUser);
